<?php

namespace App\Http\Traits;

use Illuminate\Support\Facades\Storage;

trait TraitParserText
{
     private function processFile($file)
     {
          $namaFileUpload = $file->getClientOriginalName();
          $uploadFilePath = $file->storeAs('temp', $namaFileUpload);
          return [Storage::get($uploadFilePath), $uploadFilePath];
     }


     public function parser100($file, $antrian)
     {
          $fileRaw = $this->processFile($file);

          $parseBaris = preg_split('/\r\n/', $fileRaw[0]);
          // 1101010000

          $arrayText = [];
          $ak1101010000 = $ak1101010000 = $ak1101020000 = $ak1102000000 = $ak1103010000 = $ak1103020000 = $ak1104010100 = $ak1104010200 = $ak1104010300 = $ak1104010400 = $ak1104010500 = $ak1104020000 = $ak1201000000 = $ak1202010000 = $ak1202020000 = $ak1203010000 = $ak1203020000 = $ak1204000000 = $ak1299000000 = $ak1000000000 = $ak2101000000 = $ak2102010100 = $ak2102010200 = $ak2102020100 = $ak2102020200 = $ak2103010000 = $ak2103020000 = $ak2201010000 = $ak2201020000 = $ak2201030000 = $ak2202000000 = $ak2203000000 = $ak2299000000 = $ak2000000000 = $ak3101010000 = $ak3101020000 = $ak3102010000 = $ak3102020000 = $ak3102030000 = $ak3102990000 = $ak3103010000 = $ak3103020000 = $ak3103990000 = $ak3103980000 = $ak3104010000 = $ak3104020000 = $ak3105010000 = $ak3105020000 = $ak3000000000 = 0;

          $akTotals = [
               '1101010000' => &$ak1101010000,
               '1101020000' => &$ak1101020000,
               '1102000000' => &$ak1102000000,
               '1103010000' => &$ak1103010000,
               '1103020000' => &$ak1103020000,
               '1104010100' => &$ak1104010100,
               '1104010200' => &$ak1104010200,
               '1104010300' => &$ak1104010300,
               '1104010400' => &$ak1104010400,
               '1104010500' => &$ak1104010500,
               '1104020000' => &$ak1104020000,
               '1201000000' => &$ak1201000000,
               '1202010000' => &$ak1202010000,
               '1202020000' => &$ak1202020000,
               '1203010000' => &$ak1203010000,
               '1203020000' => &$ak1203020000,
               '1204000000' => &$ak1204000000,
               '1299000000' => &$ak1299000000,
               '1000000000' => &$ak1000000000,
               '2101000000' => &$ak2101000000,
               '2102010100' => &$ak2102010100,
               '2102010200' => &$ak2102010200,
               '2102020100' => &$ak2102020100,
               '2102020200' => &$ak2102020200,
               '2103010000' => &$ak2103010000,
               '2103020000' => &$ak2103020000,
               '2201010000' => &$ak2201010000,
               '2201020000' => &$ak2201020000,
               '2201030000' => &$ak2201030000,
               '2202000000' => &$ak2202000000,
               '2203000000' => &$ak2203000000,
               '2299000000' => &$ak2299000000,
               '2000000000' => &$ak2000000000,
               '3101010000' => &$ak3101010000,
               '3101020000' => &$ak3101020000,
               '3102010000' => &$ak3102010000,
               '3102020000' => &$ak3102020000,
               '3102030000' => &$ak3102030000,
               '3102990000' => &$ak3102990000,
               '3103010000' => &$ak3103010000,
               '3103020000' => &$ak3103020000,
               '3103990000' => &$ak3103990000,
               '3103980000' => &$ak3103980000,
               '3104010000' => &$ak3104010000,
               '3104020000' => &$ak3104020000,
               '3105010000' => &$ak3105010000,
               '3105020000' => &$ak3105020000,
               '3000000000' => &$ak3000000000
          ];
          foreach ($parseBaris as $key) {
               $parse2 = explode('|', $key);
               if (count($parse2) >= 7 && $antrian == 1) $arrayText[] = $parse2;
               if (count($parse2) >= 4) {

                    if ($parse2[1] !== '000' && isset($akTotals[$parse2[2]])) {
                         $arrayText[] = $parse2;
                    }
               }
          }
          Storage::delete($fileRaw[1]);

          return $arrayText;
     }

     public function parser200($file, $antrian)
     {
          $fileRaw = $this->processFile($file);
          $parseBaris = preg_split('/\r\n/', $fileRaw[0]);
          $arrayText = [];

          $ak4100000000 = $ak4101010100 = $ak4101010201 = $ak4101010202 = $ak4101010203 = $ak4101010204 = $ak4101010301 = $ak4101010302 = $ak4101020100 = $ak4101020200 = $ak4101030100 = $ak4101030201 = $ak4101030202 = $ak4101040000 = $ak4102010000 = $ak4102020000 = $ak4102030000 = $ak4102040000 = $ak4102050000 = $ak4102990000 = $ak5100000000 = $ak5101010100 = $ak5101010200 = $ak5101010300 = $ak5101010401 = $ak5101010402 = $ak5101010403 = $ak5101010404 = $ak5101019900 = $ak5101020100 = $ak5101020200 = $ak5102000000 = $ak5103010000 = $ak5103020000 = $ak5103030100 = $ak5103030200 = $ak5104000000 = $ak5105000000 = $ak5106010100 = $ak5106010200 = $ak5106019900 = $ak5106020000 = $ak5106030100 = $ak5106039900 = $ak5106040000 = $ak5106050000 = $ak5106060000 = $ak5106070000 = $ak5106080000 = $ak5106090000 = $ak5199010000 = $ak5199020000 = $ak5199990000 = $ak3104040100 = $ak4200000000 = $ak4201010000 = $ak4201020000 = $ak4202010000 = $ak4202020000 = $ak4203000000 = $ak4204000000 = $ak4205000000 = $ak4299000000 = $ak5200000000 = $ak5201010000 = $ak5201020000 = $ak5202010000 = $ak5202020000 = $ak5203000000 = $ak5204000000 = $ak5299000000 = $ak3104040200 = $ak3104040300 = $ak5300000000 = $ak4400000000 = $ak5400000000 = $ak3104040400 = $ak7101010000 = $ak7101990000 = $ak7101980000 = $ak7102010000 = $ak7102990000 = $ak7102980000 = $ak3104040500 = $ak3104040600 = 0;
          $akTotals = [
               '4100000000' => &$ak4100000000,
               '4101010100' => &$ak4101010100,
               '4101010201' => &$ak4101010201,
               '4101010202' => &$ak4101010202,
               '4101010203' => &$ak4101010203,
               '4101010204' => &$ak4101010204,
               '4101010301' => &$ak4101010301,
               '4101010302' => &$ak4101010302,
               '4101020100' => &$ak4101020100,
               '4101020200' => &$ak4101020200,
               '4101030100' => &$ak4101030100,
               '4101030201' => &$ak4101030201,
               '4101030202' => &$ak4101030202,
               '4101040000' => &$ak4101040000,
               '4102010000' => &$ak4102010000,
               '4102020000' => &$ak4102020000,
               '4102030000' => &$ak4102030000,
               '4102040000' => &$ak4102040000,
               '4102050000' => &$ak4102050000,
               '4102990000' => &$ak4102990000,
               '5100000000' => &$ak5100000000,
               '5101010100' => &$ak5101010100,
               '5101010200' => &$ak5101010200,
               '5101010300' => &$ak5101010300,
               '5101010401' => &$ak5101010401,
               '5101010402' => &$ak5101010402,
               '5101010403' => &$ak5101010403,
               '5101010404' => &$ak5101010404,
               '5101019900' => &$ak5101019900,
               '5101020100' => &$ak5101020100,
               '5101020200' => &$ak5101020200,
               '5102000000' => &$ak5102000000,
               '5103010000' => &$ak5103010000,
               '5103020000' => &$ak5103020000,
               '5103030100' => &$ak5103030100,
               '5103030200' => &$ak5103030200,
               '5104000000' => &$ak5104000000,
               '5105000000' => &$ak5105000000,
               '5106010100' => &$ak5106010100,
               '5106010200' => &$ak5106010200,
               '5106019900' => &$ak5106019900,
               '5106020000' => &$ak5106020000,
               '5106030100' => &$ak5106030100,
               '5106039900' => &$ak5106039900,
               '5106040000' => &$ak5106040000,
               '5106050000' => &$ak5106050000,
               '5106060000' => &$ak5106060000,
               '5106070000' => &$ak5106070000,
               '5106080000' => &$ak5106080000,
               '5106090000' => &$ak5106090000,
               '5199010000' => &$ak5199010000,
               '5199020000' => &$ak5199020000,
               '5199990000' => &$ak5199990000,
               '3104040100' => &$ak3104040100,
               '4200000000' => &$ak4200000000,
               '4201010000' => &$ak4201010000,
               '4201020000' => &$ak4201020000,
               '4202010000' => &$ak4202010000,
               '4202020000' => &$ak4202020000,
               '4203000000' => &$ak4203000000,
               '4204000000' => &$ak4204000000,
               '4205000000' => &$ak4205000000,
               '4299000000' => &$ak4299000000,
               '5200000000' => &$ak5200000000,
               '5201010000' => &$ak5201010000,
               '5201020000' => &$ak5201020000,
               '5202010000' => &$ak5202010000,
               '5202020000' => &$ak5202020000,
               '5203000000' => &$ak5203000000,
               '5204000000' => &$ak5204000000,
               '5299000000' => &$ak5299000000,
               '3104040200' => &$ak3104040200,
               '3104040300' => &$ak3104040300,
               '5300000000' => &$ak5300000000,
               '4400000000' => &$ak4400000000,
               '5400000000' => &$ak5400000000,
               '3104040400' => &$ak3104040400,
               '7101010000' => &$ak7101010000,
               '7101990000' => &$ak7101990000,
               '7101980000' => &$ak7101980000,
               '7102010000' => &$ak7102010000,
               '7102990000' => &$ak7102990000,
               '7102980000' => &$ak7102980000,
               '3104040500' => &$ak3104040500,
               '3104040600' => &$ak3104040600,
          ];

          foreach ($parseBaris as $key) {
               $parse2 = explode('|', $key);
               if (count($parse2) >= 7 && $antrian == 1) $arrayText[] = $parse2;
               if (count($parse2) == 4) {

                    if ($parse2[1] !== '000' && isset($akTotals[$parse2[2]])) {
                         $arrayText[] = $parse2;
                    }
               }
          }

          Storage::delete($fileRaw[1]);
          // dd('a');
          return $arrayText;
     }

     public function parser600($file, $antrian)
     {
          $fileRaw = $this->processFile($file);

          $parseBaris = preg_split('/\r\n/', $fileRaw[0]);
          // 1101010000

          $arrayText = [];

          foreach ($parseBaris as $key) {
               $parse2 = explode('|', $key);
               if (count($parse2) == 8 && $antrian == 1) $arrayText[] = $parse2;
               if (count($parse2) > 8 || count($parse2) <=4 ) {
                    $arrayText[] = $parse2;
               }
          }
          Storage::delete($fileRaw[1]);

          return $arrayText;
     }
     public function parser101($file, $antrian)
     {
          $fileRaw = $this->processFile($file);

          $parseBaris = preg_split('/\r\n/', $fileRaw[0]);
          // 1101010000

          $arrayText = [];
          $ak6101010000 = $ak6101990000 = $ak6102010000 = $ak6102020000 = $ak6102990000 = $ak6201010100 = $ak6201010200 = $ak6201020100 = $ak6201020200 = $ak6201020300 = $ak6201020400 = $ak6201030000 = $ak6201990000 = $ak6202000000 = $ak6900000000 = 0;


          $akTotals = [
               '6101010000' => &$ak6101010000,
               '6101990000' => &$ak6101990000,
               '6102010000' => &$ak6102010000,
               '6102020000' => &$ak6102020000,
               '6102990000' => &$ak6102990000,
               '6201010100' => &$ak6201010100,
               '6201010200' => &$ak6201010200,
               '6201020100' => &$ak6201020100,
               '6201020200' => &$ak6201020200,
               '6201020300' => &$ak6201020300,
               '6201020400' => &$ak6201020400,
               '6201030000' => &$ak6201030000,
               '6201990000' => &$ak6201990000,
               '6202000000' => &$ak6202000000,
               '6900000000' => &$ak6900000000
          ];
          foreach ($parseBaris as $key) {
               $parse2 = explode('|', $key);
               if (count($parse2) >= 7 && $antrian == 1) $arrayText[] = $parse2;
               if (count($parse2) >= 4) {

                    if ($parse2[1] !== '000' && isset($akTotals[$parse2[2]])) {
                         $arrayText[] = $parse2;
                    }
               }
          }
          Storage::delete($fileRaw[1]);

          return $arrayText;
     }
}
